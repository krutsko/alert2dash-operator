name: Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [labeled, unlabeled, opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  set-vars:
    permissions:
      contents: read
    if: github.repository == 'krutsko/alert2dash-operator'
    runs-on: ubuntu-22.04
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      platforms: ${{ steps.platforms.outputs.platforms }}
    steps:
      - uses: actions/checkout@v4

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Determine image platforms
        id: platforms
        run: |
          IMAGE_PLATFORMS=linux/amd64
          if [[ "${{ github.event_name }}" == "push" || "${{ contains(github.event.pull_request.labels.*.name, 'test-multi-arch') }}" == "true" ]]
          then
            IMAGE_PLATFORMS=linux/amd64,linux/arm64
          fi
          echo "platforms=$IMAGE_PLATFORMS" >> $GITHUB_OUTPUT

  build-only:
    needs: [set-vars]
    permissions:
      contents: read
      packages: write
      id-token: write
    if: ${{ github.repository == 'krutsko/alert2dash-operator' && github.event_name != 'push' }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ needs.set-vars.outputs.platforms }}
          push: false
          tags: ${{ needs.set-vars.outputs.image-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-publish:
    needs: [set-vars]
    permissions:
      contents: read
      packages: write
      id-token: write
    if: ${{ github.repository == 'krutsko/alert2dash-operator' && github.event_name == 'push' }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.4.0
        with:
          cosign-release: 'v2.2.2'
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ needs.set-vars.outputs.platforms }}
          push: true
          tags: ${{ needs.set-vars.outputs.image-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        env:
          TAGS: ${{ needs.set-vars.outputs.image-tag }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}