apiVersion: monitoring.krutsko.com/v1alpha1
kind: AlertDashboard
metadata:
  name: all-critical-monitoring
  namespace: monitoring
spec:
  metadataLabelSelector:
    matchLabels:
      namespace: monitoring
  ruleLabelSelector:
    matchLabels:
      severity: critical
  customJsonnetTemplate: |
    local grafana = import 'vendor/grafonnet-lib/grafonnet/grafana.libsonnet';
    local dashboard = grafana.dashboard;
    local graphPanel = grafana.graphPanel;
    local prometheus = grafana.prometheus;
    local template = grafana.template;
    local row = grafana.row;

    dashboard.new(
      std.extVar('title'),
      tags=['generated', 'prometheus'],
      time_from='now-1h',
      timezone='browser',
      refresh='10s',
      editable=true,
    )
    .addPanels(
      std.mapWithIndex(
        function(index, metric)
          graphPanel.new(
            title=metric.name,
            datasource={
              type: 'prometheus',
              uid: 'prometheus'
            },
          )
          .addTarget(
            prometheus.target(
              metric.query,
            )
          )
          + {
            gridPos: {
              h: 8,
              w: 24,
              x: 0,
              y: index * 8
            }
          },
        std.parseJson(std.extVar('metrics'))
      )
    )   
  dashboardConfig:
    configMapNamePrefix: "grafana-dashboard"